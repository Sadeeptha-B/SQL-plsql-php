-- Generated by Oracle SQL Developer Data Modeler 20.4.0.374.0801
--   at:        2021-09-17 00:54:20 IST
--   site:      Oracle Database 12c
--   type:      Oracle Database 12c

--student id: 30769140
--student name: Sadeeptha Bandara

-- Capture run of script in file called mm_schema_output.txt
set echo on
SPOOL mm_schema_output.txt

-- Generated by Oracle SQL Developer Data Modeler 20.4.0.374.0801
--   at:        2021-09-17 09:11:27 IST
--   site:      Oracle Database 12c
--   type:      Oracle Database 12c



DROP TABLE assessment CASCADE CONSTRAINTS;

DROP TABLE centre CASCADE CONSTRAINTS;

DROP TABLE class CASCADE CONSTRAINTS;

DROP TABLE class_staff CASCADE CONSTRAINTS;

DROP TABLE class_type CASCADE CONSTRAINTS;

DROP TABLE enrollment CASCADE CONSTRAINTS;

DROP TABLE facility CASCADE CONSTRAINTS;

DROP TABLE member CASCADE CONSTRAINTS;

DROP TABLE member_attendance CASCADE CONSTRAINTS;

DROP TABLE staff_member CASCADE CONSTRAINTS;

-- predefined type, no DDL - MDSYS.SDO_GEOMETRY

-- predefined type, no DDL - XMLTYPE

CREATE TABLE assessment (
    member_no      NUMBER(7) NOT NULL,
    assess_date    DATE NOT NULL,
    assess_wieght  NUMBER(5, 2) NOT NULL,
    assess_bp      NUMBER(4, 2) NOT NULL,
    assess_bmi     NUMBER(4, 2) NOT NULL,
    assess_vo2max  NUMBER(4, 2) NOT NULL,
    staff_id       NUMBER(7) NOT NULL,
    assessment_no  NUMBER(7) NOT NULL
);

COMMENT ON COLUMN assessment.member_no IS
    'Member number';

COMMENT ON COLUMN assessment.assess_date IS
    'Assessment date';

COMMENT ON COLUMN assessment.assess_wieght IS
    'Assessed weight';

COMMENT ON COLUMN assessment.assess_bp IS
    'Assessed blood pressure';

COMMENT ON COLUMN assessment.assess_bmi IS
    'Assessed BMI';

COMMENT ON COLUMN assessment.assess_vo2max IS
    'Assessed VO2Max';

COMMENT ON COLUMN assessment.staff_id IS
    'Staff ID number';

COMMENT ON COLUMN assessment.assessment_no IS
    'Assessment Number';

ALTER TABLE assessment ADD CONSTRAINT assessment_pk PRIMARY KEY ( assessment_no );

ALTER TABLE assessment ADD CONSTRAINT assessment_nk UNIQUE ( member_no,
                                                             assess_date );

CREATE TABLE centre (
    centre_id         NUMBER(7) NOT NULL,
    centre_name       VARCHAR2(50) NOT NULL,
    centre_street     VARCHAR2(50) NOT NULL,
    centre_town       VARCHAR2(50) NOT NULL,
    centre_postcode   VARCHAR2(10) NOT NULL,
    centre_phone      CHAR(10) NOT NULL,
    manager_staff_id  NUMBER(7) NOT NULL
);

COMMENT ON COLUMN centre.centre_id IS
    'Centre ID';

COMMENT ON COLUMN centre.centre_name IS
    'Centre name';

COMMENT ON COLUMN centre.centre_street IS
    'Centre''s street';

COMMENT ON COLUMN centre.centre_town IS
    'Centre''s town';

COMMENT ON COLUMN centre.centre_postcode IS
    'Centre''s postcode';

COMMENT ON COLUMN centre.centre_phone IS
    'Centre''s phone number';

COMMENT ON COLUMN centre.manager_staff_id IS
    'Staff ID number';

CREATE UNIQUE INDEX centre__idx ON
    centre (
        manager_staff_id
    ASC );

ALTER TABLE centre ADD CONSTRAINT centre_pk PRIMARY KEY ( centre_id );

CREATE TABLE class (
    centre_id               NUMBER(7) NOT NULL,
    class_no                NUMBER(7) NOT NULL,
    class_desc              VARCHAR2(50) NOT NULL,
    class_start_date_time   DATE NOT NULL,
    class_max_participants  NUMBER(3) NOT NULL,
    class_sessions          NUMBER(3) NOT NULL,
    class_cost              NUMBER(7, 2) NOT NULL,
    facility_room_no        NUMBER(7) NOT NULL,
    class_type_id           NUMBER(7) NOT NULL,
    class_gender_restr      CHAR(1) NOT NULL
);

ALTER TABLE class
    ADD CONSTRAINT chk_gender_restr CHECK ( class_gender_restr IN ( 'F', 'M', 'U' ) );

COMMENT ON COLUMN class.centre_id IS
    'Centre ID';

COMMENT ON COLUMN class.class_no IS
    'Class number: unique within a centre';

COMMENT ON COLUMN class.class_desc IS
    'class description';

COMMENT ON COLUMN class.class_start_date_time IS
    'Date and time of the first session of the class';

COMMENT ON COLUMN class.class_max_participants IS
    'Class maximum participants';

COMMENT ON COLUMN class.class_sessions IS
    'Number of sessions of a class';

COMMENT ON COLUMN class.class_cost IS
    'Cost of a class';

COMMENT ON COLUMN class.facility_room_no IS
    'Room number of the Facility';

COMMENT ON COLUMN class.class_type_id IS
    'Class type ID';

COMMENT ON COLUMN class.class_gender_restr IS
    'Specify whether the class is gender specific or not: 
	M- Male, F-Female, U- Unrestricted';

ALTER TABLE class ADD CONSTRAINT class_pk PRIMARY KEY ( class_no,
                                                        centre_id );

CREATE TABLE class_staff (
    class_staff_no      NUMBER(7) NOT NULL,
    centre_id           NUMBER(7) NOT NULL,
    class_no            NUMBER(7) NOT NULL,
    staff_id            NUMBER(7) NOT NULL,
    class_staff_leader  CHAR(1) NOT NULL
);

ALTER TABLE class_staff
    ADD CONSTRAINT chk_class_leader CHECK ( class_staff_leader IN ( 'N', 'Y' ) );

COMMENT ON COLUMN class_staff.class_staff_no IS
    'Class staff member''s number';

COMMENT ON COLUMN class_staff.centre_id IS
    'Centre ID';

COMMENT ON COLUMN class_staff.class_no IS
    'Class number: unique within a centre';

COMMENT ON COLUMN class_staff.staff_id IS
    'Staff ID number';

COMMENT ON COLUMN class_staff.class_staff_leader IS
    'Whether a staff member is the class leader
	Y: Yes, N: No';

ALTER TABLE class_staff ADD CONSTRAINT class_staff_pk PRIMARY KEY ( class_staff_no );

ALTER TABLE class_staff
    ADD CONSTRAINT class_staff_nk UNIQUE ( centre_id,
                                           class_no,
                                           staff_id );

CREATE TABLE class_type (
    class_type_id    NUMBER(7) NOT NULL,
    class_type_name  VARCHAR2(50) NOT NULL
);

COMMENT ON COLUMN class_type.class_type_id IS
    'Class type ID';

COMMENT ON COLUMN class_type.class_type_name IS
    'Name of the class type';

ALTER TABLE class_type ADD CONSTRAINT class_type_pk PRIMARY KEY ( class_type_id );

CREATE TABLE enrollment (
    enrollment_no            NUMBER(7) NOT NULL,
    centre_id                NUMBER(7) NOT NULL,
    class_no                 NUMBER(7) NOT NULL,
    member_no                NUMBER(7) NOT NULL,
    enroll_payment_date      DATE NOT NULL,
    enroll_total_attendance  NUMBER(3) NOT NULL
);

COMMENT ON COLUMN enrollment.enrollment_no IS
    'Enrollment Number';

COMMENT ON COLUMN enrollment.centre_id IS
    'Centre ID';

COMMENT ON COLUMN enrollment.class_no IS
    'Class number: unique within a centre';

COMMENT ON COLUMN enrollment.member_no IS
    'Member number';

COMMENT ON COLUMN enrollment.enroll_payment_date IS
    'Member''s Payment date for a class';

COMMENT ON COLUMN enrollment.enroll_total_attendance IS
    'The total attendance of the member for the enrollment';

ALTER TABLE enrollment ADD CONSTRAINT enrolment_pk PRIMARY KEY ( enrollment_no );

ALTER TABLE enrollment
    ADD CONSTRAINT enrollment_nk UNIQUE ( centre_id,
                                          class_no,
                                          member_no );

CREATE TABLE facility (
    centre_id          NUMBER(7) NOT NULL,
    facility_room_no   NUMBER(7) NOT NULL,
    facility_name      VARCHAR2(50) NOT NULL,
    facility_desc      VARCHAR2(50) NOT NULL,
    facility_capacity  NUMBER(3) NOT NULL
);

COMMENT ON COLUMN facility.centre_id IS
    'Centre ID';

COMMENT ON COLUMN facility.facility_room_no IS
    'Room number of the Facility';

COMMENT ON COLUMN facility.facility_name IS
    'Name of the facility';

COMMENT ON COLUMN facility.facility_desc IS
    'Description of the facility';

COMMENT ON COLUMN facility.facility_capacity IS
    'The capacity of the facility';

ALTER TABLE facility ADD CONSTRAINT facility_pk PRIMARY KEY ( facility_room_no,
                                                              centre_id );

CREATE TABLE member (
    member_no            NUMBER(7) NOT NULL,
    member_fname         VARCHAR2(50),
    member_gname         VARCHAR2(50),
    member_street        VARCHAR2(50) NOT NULL,
    member_town          VARCHAR2(50) NOT NULL,
    member_postcode      VARCHAR2(10) NOT NULL,
    member_phone_no      CHAR(10) NOT NULL,
    member_join_date     DATE NOT NULL,
    nominated_centre_id  NUMBER(7) NOT NULL,
    member_referred      NUMBER(7) NOT NULL
);

COMMENT ON COLUMN member.member_no IS
    'Member number';

COMMENT ON COLUMN member.member_fname IS
    'Member family  name';

COMMENT ON COLUMN member.member_gname IS
    'Member given name';

COMMENT ON COLUMN member.member_street IS
    'Member''s street';

COMMENT ON COLUMN member.member_town IS
    'Member''s town';

COMMENT ON COLUMN member.member_postcode IS
    'Member''s postcode';

COMMENT ON COLUMN member.member_phone_no IS
    'Member''s phone number';

COMMENT ON COLUMN member.member_join_date IS
    'The date the member joined';

COMMENT ON COLUMN member.nominated_centre_id IS
    'Centre ID';

COMMENT ON COLUMN member.member_referred IS
    'Member number';

ALTER TABLE member ADD CONSTRAINT member_pk PRIMARY KEY ( member_no );

CREATE TABLE member_attendance (
    enrollment_no          NUMBER(7) NOT NULL,
    member_attend_date     DATE NOT NULL,
    member_attend_session  CHAR(1) NOT NULL
);

ALTER TABLE member_attendance
    ADD CONSTRAINT chk_attended CHECK ( member_attend_session IN ( 'A', 'P' ) );

COMMENT ON COLUMN member_attendance.enrollment_no IS
    'Enrollment Number';

COMMENT ON COLUMN member_attendance.member_attend_date IS
    'Date of a class session';

COMMENT ON COLUMN member_attendance.member_attend_session IS
    'Whether the member attended a particular session';

ALTER TABLE member_attendance ADD CONSTRAINT member_attendance_pk PRIMARY KEY ( enrollment_no,
                                                                                member_attend_date );

CREATE TABLE staff_member (
    staff_id              NUMBER(7) NOT NULL,
    staff_fname           VARCHAR2(50),
    staff_gname           VARCHAR2(50),
    staff_mobile_no       CHAR(10) NOT NULL,
    staff_start_date      DATE NOT NULL,
    staff_role            CHAR(1) NOT NULL,
    centre_id             NUMBER(7) NOT NULL,
    staff_first_aid_cert  CHAR(1) NOT NULL
);

ALTER TABLE staff_member
    ADD CONSTRAINT chk_staff_roles CHECK ( staff_role IN ( 'A', 'C', 'D', 'M', 'P',
                                                           'S' ) );

ALTER TABLE staff_member
    ADD CONSTRAINT chk_staff_first_aid CHECK ( staff_first_aid_cert IN ( 'N', 'Y' ) );

COMMENT ON COLUMN staff_member.staff_id IS
    'Staff ID number';

COMMENT ON COLUMN staff_member.staff_fname IS
    'Staff family name';

COMMENT ON COLUMN staff_member.staff_gname IS
    'Staff given name';

COMMENT ON COLUMN staff_member.staff_mobile_no IS
    'Staff mobile number';

COMMENT ON COLUMN staff_member.staff_start_date IS
    'staff joined date';

COMMENT ON COLUMN staff_member.staff_role IS
    'Specify staff role:
Administration (A)
Cleaner (C)
Instructor Dry (D)
Instructor Pool (P)
Manager (only one per centre) (M)
Sales (S)
Security (T)';

COMMENT ON COLUMN staff_member.centre_id IS
    'Centre ID';

COMMENT ON COLUMN staff_member.staff_first_aid_cert IS
    'Whether staff member has a first aid certificate
	Y: Yes, N:No';

ALTER TABLE staff_member ADD CONSTRAINT staff_member_pk PRIMARY KEY ( staff_id );

ALTER TABLE facility
    ADD CONSTRAINT centre_facility FOREIGN KEY ( centre_id )
        REFERENCES centre ( centre_id );

ALTER TABLE member
    ADD CONSTRAINT centre_member FOREIGN KEY ( nominated_centre_id )
        REFERENCES centre ( centre_id );

ALTER TABLE staff_member
    ADD CONSTRAINT centre_staff_member FOREIGN KEY ( centre_id )
        REFERENCES centre ( centre_id );

ALTER TABLE class_staff
    ADD CONSTRAINT class_class_staff FOREIGN KEY ( class_no,
                                                   centre_id )
        REFERENCES class ( class_no,
                           centre_id );

ALTER TABLE class
    ADD CONSTRAINT class_class_type FOREIGN KEY ( class_type_id )
        REFERENCES class_type ( class_type_id );

ALTER TABLE enrollment
    ADD CONSTRAINT class_enrollment FOREIGN KEY ( class_no,
                                                  centre_id )
        REFERENCES class ( class_no,
                           centre_id );

ALTER TABLE member_attendance
    ADD CONSTRAINT enroll_member_attend FOREIGN KEY ( enrollment_no )
        REFERENCES enrollment ( enrollment_no );

ALTER TABLE class
    ADD CONSTRAINT facility_class FOREIGN KEY ( facility_room_no,
                                                centre_id )
        REFERENCES facility ( facility_room_no,
                              centre_id );

ALTER TABLE assessment
    ADD CONSTRAINT member_assessment FOREIGN KEY ( member_no )
        REFERENCES member ( member_no );

ALTER TABLE enrollment
    ADD CONSTRAINT member_enrollment FOREIGN KEY ( member_no )
        REFERENCES member ( member_no );

ALTER TABLE member
    ADD CONSTRAINT member_member FOREIGN KEY ( member_referred )
        REFERENCES member ( member_no );

ALTER TABLE assessment
    ADD CONSTRAINT staff_assessment FOREIGN KEY ( staff_id )
        REFERENCES staff_member ( staff_id );

ALTER TABLE centre
    ADD CONSTRAINT staff_centre_manage FOREIGN KEY ( manager_staff_id )
        REFERENCES staff_member ( staff_id );

ALTER TABLE class_staff
    ADD CONSTRAINT staff_class_staff FOREIGN KEY ( staff_id )
        REFERENCES staff_member ( staff_id );



-- Oracle SQL Developer Data Modeler Summary Report: 
-- 
-- CREATE TABLE                            10
-- CREATE INDEX                             1
-- ALTER TABLE                             32
-- CREATE VIEW                              0
-- ALTER VIEW                               0
-- CREATE PACKAGE                           0
-- CREATE PACKAGE BODY                      0
-- CREATE PROCEDURE                         0
-- CREATE FUNCTION                          0
-- CREATE TRIGGER                           0
-- ALTER TRIGGER                            0
-- CREATE COLLECTION TYPE                   0
-- CREATE STRUCTURED TYPE                   0
-- CREATE STRUCTURED TYPE BODY              0
-- CREATE CLUSTER                           0
-- CREATE CONTEXT                           0
-- CREATE DATABASE                          0
-- CREATE DIMENSION                         0
-- CREATE DIRECTORY                         0
-- CREATE DISK GROUP                        0
-- CREATE ROLE                              0
-- CREATE ROLLBACK SEGMENT                  0
-- CREATE SEQUENCE                          0
-- CREATE MATERIALIZED VIEW                 0
-- CREATE MATERIALIZED VIEW LOG             0
-- CREATE SYNONYM                           0
-- CREATE TABLESPACE                        0
-- CREATE USER                              0
-- 
-- DROP TABLESPACE                          0
-- DROP DATABASE                            0
-- 
-- REDACTION POLICY                         0
-- TSDP POLICY                              0
-- 
-- ORDS DROP SCHEMA                         0
-- ORDS ENABLE SCHEMA                       0
-- ORDS ENABLE OBJECT                       0
-- 
-- ERRORS                                   0
-- WARNINGS                                 0

SPOOL off
set echo off
